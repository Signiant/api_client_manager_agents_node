/*
 * Manager+Agents API
 * Signiant Manager+Agents provides a REST API to automate user management, user group, agent groups, jobs, resource controls, and job groups. 
 *
 * OpenAPI spec version: 14.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ManageragentsApi);
  }
}(this, function(expect, ManageragentsApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MxProperties', function() {
      beforeEach(function() {
        instance = new ManageragentsApi.MxProperties();
      });

      it('should create an instance of MxProperties', function() {
        // TODO: update the code to test MxProperties
        expect(instance).to.be.a(ManageragentsApi.MxProperties);
      });

      it('should have the property downloadBandwidthProfile (base name: "downloadBandwidthProfile")', function() {
        // TODO: update the code to test the property downloadBandwidthProfile
        expect(instance).to.have.property('downloadBandwidthProfile');
        // expect(instance.downloadBandwidthProfile).to.be(expectedValueLiteral);
      });

      it('should have the property uploadBandwidthProfile (base name: "uploadBandwidthProfile")', function() {
        // TODO: update the code to test the property uploadBandwidthProfile
        expect(instance).to.have.property('uploadBandwidthProfile');
        // expect(instance.uploadBandwidthProfile).to.be(expectedValueLiteral);
      });

      it('should have the property mxEnabled (base name: "mxEnabled")', function() {
        // TODO: update the code to test the property mxEnabled
        expect(instance).to.have.property('mxEnabled');
        // expect(instance.mxEnabled).to.be(expectedValueLiteral);
      });

      it('should have the property mxNetworkMaskProfileId (base name: "mxNetworkMaskProfileId")', function() {
        // TODO: update the code to test the property mxNetworkMaskProfileId
        expect(instance).to.have.property('mxNetworkMaskProfileId');
        // expect(instance.mxNetworkMaskProfileId).to.be(expectedValueLiteral);
      });

      it('should have the property licensesRemaining (base name: "licenses Remaining")', function() {
        // TODO: update the code to test the property licensesRemaining
        expect(instance).to.have.property('licensesRemaining');
        // expect(instance.licensesRemaining).to.be(expectedValueLiteral);
      });

      it('should have the property mxConcurrency (base name: "mxConcurrency")', function() {
        // TODO: update the code to test the property mxConcurrency
        expect(instance).to.have.property('mxConcurrency');
        // expect(instance.mxConcurrency).to.be(expectedValueLiteral);
      });

      it('should have the property packageRepositoryPath (base name: "packageRepositoryPath")', function() {
        // TODO: update the code to test the property packageRepositoryPath
        expect(instance).to.have.property('packageRepositoryPath');
        // expect(instance.packageRepositoryPath).to.be(expectedValueLiteral);
      });

      it('should have the property useMxRelaysFromMemberAgents (base name: "useMxRelaysFromMemberAgents")', function() {
        // TODO: update the code to test the property useMxRelaysFromMemberAgents
        expect(instance).to.have.property('useMxRelaysFromMemberAgents');
        // expect(instance.useMxRelaysFromMemberAgents).to.be(expectedValueLiteral);
      });

      it('should have the property relays (base name: "relays")', function() {
        // TODO: update the code to test the property relays
        expect(instance).to.have.property('relays');
        // expect(instance.relays).to.be(expectedValueLiteral);
      });

    });
  });

}));
