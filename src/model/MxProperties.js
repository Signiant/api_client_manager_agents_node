/*
 * Manager+Agents API
 * Signiant Manager+Agents provides a REST API to automate user management, user group, agent groups, jobs, resource controls, and job groups. 
 *
 * OpenAPI spec version: 14.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Relays'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Relays'));
  } else {
    // Browser globals (root is window)
    if (!root.ManageragentsApi) {
      root.ManageragentsApi = {};
    }
    root.ManageragentsApi.MxProperties = factory(root.ManageragentsApi.ApiClient, root.ManageragentsApi.Relays);
  }
}(this, function(ApiClient, Relays) {
  'use strict';

  /**
   * The MxProperties model module.
   * @module model/MxProperties
   * @version 14.1.0
   */

  /**
   * Constructs a new <code>MxProperties</code>.
   * Media Exchange properties of the agent group.
   * @alias module:model/MxProperties
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>MxProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MxProperties} obj Optional instance to populate.
   * @return {module:model/MxProperties} The populated <code>MxProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('downloadBandwidthProfile'))
        obj.downloadBandwidthProfile = ApiClient.convertToType(data['downloadBandwidthProfile'], 'String');
      if (data.hasOwnProperty('uploadBandwidthProfile'))
        obj.uploadBandwidthProfile = ApiClient.convertToType(data['uploadBandwidthProfile'], 'String');
      if (data.hasOwnProperty('mxEnabled'))
        obj.mxEnabled = ApiClient.convertToType(data['mxEnabled'], 'Boolean');
      if (data.hasOwnProperty('mxNetworkMaskProfileId'))
        obj.mxNetworkMaskProfileId = ApiClient.convertToType(data['mxNetworkMaskProfileId'], 'Boolean');
      if (data.hasOwnProperty('licenses Remaining'))
        obj.licensesRemaining = ApiClient.convertToType(data['licenses Remaining'], 'Number');
      if (data.hasOwnProperty('mxConcurrency'))
        obj.mxConcurrency = ApiClient.convertToType(data['mxConcurrency'], 'Number');
      if (data.hasOwnProperty('packageRepositoryPath'))
        obj.packageRepositoryPath = ApiClient.convertToType(data['packageRepositoryPath'], 'String');
      if (data.hasOwnProperty('useMxRelaysFromMemberAgents'))
        obj.useMxRelaysFromMemberAgents = ApiClient.convertToType(data['useMxRelaysFromMemberAgents'], 'Boolean');
      if (data.hasOwnProperty('relays'))
        obj.relays = ApiClient.convertToType(data['relays'], [Relays]);
    }
    return obj;
  }

  /**
   * Download MX profile of the agent group.
   * @member {String} downloadBandwidthProfile
   */
  exports.prototype.downloadBandwidthProfile = undefined;

  /**
   * Upload MX profile of the agent group.
   * @member {String} uploadBandwidthProfile
   */
  exports.prototype.uploadBandwidthProfile = undefined;

  /**
   * Does the agent group is MX enabled or not
   * @member {Boolean} mxEnabled
   */
  exports.prototype.mxEnabled = undefined;

  /**
   * Does the agent group has MX Network Mask Profile Id enable
   * @member {Boolean} mxNetworkMaskProfileId
   */
  exports.prototype.mxNetworkMaskProfileId = undefined;

  /**
   * How much licenes remaining had the agent group
   * @member {Number} licensesRemaining
   */
  exports.prototype.licensesRemaining = undefined;

  /**
   * Number of mx concurrency
   * @member {Number} mxConcurrency
   */
  exports.prototype.mxConcurrency = undefined;

  /**
   * The mx repository path
   * @member {String} packageRepositoryPath
   */
  exports.prototype.packageRepositoryPath = undefined;

  /**
   * Does the agent group has relays set
   * @member {Boolean} useMxRelaysFromMemberAgents
   */
  exports.prototype.useMxRelaysFromMemberAgents = undefined;

  /**
   * @member {Array.<module:model/Relays>} relays
   */
  exports.prototype.relays = undefined;


  return exports;

}));
